<?xml version="1.0"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:c="component.*" xmlns:input="component.input.*" xmlns:plus="component.plus.*"
               xmlns:head="component.head.*"
               backgroundColor="0xa9a9a9" creationComplete="creationCompleteHandler(event)">
    <fx:Script><![CDATA[
        import mx.events.FlexEvent;
        import mx.utils.StringUtil;

        import vo.UserItem;

        private var _user:UserItem;
        private var _selectUser:UserItem;

        private function setItem(item:UserItem, isSelect:Boolean = false):void {
            if (isSelect) {
                _selectUser = item.clone();
            }

            user = item;
        }

        private function creationCompleteHandler(event:FlexEvent):void {
            var defaultUser:UserItem;
            var i = 0;
            for each(var item:UserItem in Consts.list) {
                if (i == 0) {
                    defaultUser = item;
                }

                if (item.isAutoLogin) {
                    defaultUser = item;
                    break;
                }

                i++;
            }

            setItem(defaultUser, true);
        }

        [Bindable]
        public function get user():UserItem {
            if (headView.currentState == 'single') {
                return _selectUser;
            } else {
                return _user;
            }
        }

        public function set user(value:UserItem):void {
            _user = value;
        }

        private function topGroup_clickHandler(event:MouseEvent):void {
            if (event.target == closeButton) {//排除关闭按钮的click事件
                return;
            }

            headView.currentState = 'single';
            setItem(_selectUser, true);
        }
        ]]></fx:Script>

    <s:Group verticalCenter="0" horizontalCenter="0" width="248" height="317">
        <plus:PlusContainer id="plusContainer" user="{user}"/>

        <s:Group id="mainGroup" width="100%" height="100%">
            <s:BorderContainer width="100%" height="100%" borderVisible="false"
                               backgroundColor="#ECEEEF" cornerRadius="8">
                <s:layout>
                    <s:VerticalLayout horizontalAlign="center" paddingBottom="10" gap="0"/>
                </s:layout>

                <s:Group id="topGroup" width="100%" height="30" click="topGroup_clickHandler(event)">
                    <c:CirleCloseButton id="closeButton" x="13" y="13"/>
                </s:Group>

                <head:HeadView id="headView" selectBack="setItem" picIndex="{user.picIndex}"/>

                <s:Spacer height="15"/>

                <input:MyTextInput id="qqInput" width="80%" restrict="0-9" prompt="输入账号" text="{user.qq}"
                                   focusIn="headView.currentState = 'single'"/>

                <s:Spacer height="10"/>
                <input:MyTextInput id="pwInput" width="80%" isPassword="true" prompt="输入密码" text="{user.pw}"
                                   isShowLoginButton="true"
                                   isCanLogin="{StringUtil.trim(qqInput.text)!='' &amp;&amp; pwInput.text.length>0}"/>
                <s:Spacer height="100%"/>
                <c:PlusButton
                        click="plusContainer.currentState=plusContainer.currentState=='normal'?'plus':'normal'"/>

            </s:BorderContainer>
            <s:RectangularDropShadow width="100%" height="100%" blRadius="8" brRadius="8" tlRadius="8" trRadius="8"
                                     distance="0"
                                     angle="0" color="0x000000"/>
        </s:Group>
    </s:Group>


</s:Application>
